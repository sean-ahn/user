syntax = "proto3";

package user.v1;

import "google/api/annotations.proto";

service UserService {
  // SMS OTP 요청
  rpc RequestSmsOtp(RequestSmsOtpRequest) returns (RequestSmsOtpResponse) {
    option (google.api.http) = {
      post: "/user/v1/otp/sms/request"
      body: "*"
    };
  }
  // SMS OTP 검증
  rpc VerifySmsOtp(VerifySmsOtpRequest) returns (VerifySmsOtpResponse) {
    option (google.api.http) = {
      post: "/user/v1/otp/sms/verify"
      body: "*"
    };
  }
  // 로그인
  rpc SignIn(SignInRequest) returns (SignInResponse) {
    option (google.api.http) = {
      post: "/user/v1/sign-in"
      body: "*"
    };
  }
  // 로그아웃
  rpc SignOut(SignOutRequest) returns (SignOutResponse) {
    option (google.api.http) = {
      post: "/user/v1/sign-out"
      body: "*"
    };
  }
  // 토큰 갱신
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
    option (google.api.http) = {
      post: "/user/v1/token/refresh"
      body: "*"
    };
  }
}

message RequestSmsOtpRequest {
  // format: E.164
  string phone_number = 1;
}

message RequestSmsOtpResponse {
  // format: uuid v4
  string verification_token = 1;
  // unit: millisecond
  // e.g. `180000` means 3 minutes
  int32 expires_in_ms = 2;
}

message VerifySmsOtpRequest {
  // format: uuid v4
  string verification_token = 1;
  string sms_otp_code = 2;
}

message VerifySmsOtpResponse {}

message SignInRequest {
  string id = 1;
  string password = 2;
}

message SignInResponse {
  // format: JWT
  string access_token = 1;
  // format: JWT
  string refresh_token = 2;
}

message SignOutRequest {
  // format: JWT
  string refresh_token = 1;
}

message SignOutResponse {}

message RefreshTokenRequest {
  // format: JWT
  string refresh_token = 1;
}

message RefreshTokenResponse {
  // format: JWT
  string access_token = 1;
  // format: JWT
  string refresh_token = 2;
}
